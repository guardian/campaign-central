#Client Side Routes
GET	/		                          controllers.App.index(id = "")
GET	/campaigns		                controllers.App.index(id = "")
GET	/campaigns/:id		            controllers.App.index(id)
GET	/campaign/:id		              controllers.App.index(id)
GET	/capiImport		                controllers.App.index(id = "")
GET	/management/analytics         controllers.App.index(id = "")


GET /login            controllers.LogIn.logIn()
GET /logout           controllers.LogIn.logOut()
GET /oauth2callback   controllers.LogIn.oauth2Callback()


#Campaign Api

GET /api/campaigns                         controllers.CampaignApi.getAllCampaigns
GET /api/v2/campaigns/latestAnalytics      controllers.CampaignApi.getLatestCampaignAnalytics
GET /api/v2/campaigns/:id/latestAnalytics  controllers.CampaignApi.getLatestAnalyticsForCampaign(id: String)

GET /api/campaigns/:id                      controllers.CampaignApi.getCampaign(id: String)
PUT /api/campaigns/:id                      controllers.CampaignApi.updateCampaign(id: String)
DELETE /api/campaigns/:id                   controllers.CampaignApi.deleteCampaign(id: String)
GET /api/campaigns/:id/pageViews            controllers.CampaignApi.getCampaignPageViews(id: String)
GET /api/v2/campaigns/:id/pageViews         controllers.CampaignApi.getCampaignPageViewsFromDatalake(id: String)
GET /api/v2/campaigns/:id/uniques           controllers.CampaignApi.getCampaignUniquesFromDatalake(id: String)
GET /api/campaigns/:id/dailyUniques         controllers.CampaignApi.getCampaignDailyUniqueUsers(id: String)
GET /api/campaigns/:id/qualifiedReport      controllers.CampaignApi.getCampaignQualifiedPercentagesReport(id: String)
GET /api/campaigns/:id/targetsReport        controllers.CampaignApi.getCampaignTargetsReport(id: String)
GET /api/campaigns/:id/content              controllers.CampaignApi.getCampaignContent(id: String)
POST /api/campaigns/import                  controllers.CampaignApi.importFromTag()
POST /api/campaigns/:id/refreshFromCAPI     controllers.CampaignApi.refreshCampaignFromCAPI(id: String)
GET /api/campaigns/:id/drivers              controllers.CampaignApi.getCampaignTrafficDrivers(id: String)
GET /api/campaigns/:id/suggest-drivers      controllers.CampaignApi.getSuggestedCampaignTrafficDrivers(id: String)
PUT /api/campaigns/:id/driver/:driverId     controllers.CampaignApi.acceptSuggestedCampaignTrafficDriver(id: String, driverId: Long)
PUT /api/campaigns/:id/not-driver/:driverId controllers.CampaignApi.rejectSuggestedCampaignTrafficDriver(id: String, driverId: Long)
GET /api/campaigns/:id/driverstats          controllers.CampaignApi.getCampaignTrafficDriverStats(id: String)
GET /api/campaigns/:id/ctastats             controllers.CampaignApi.getCampaignCtaStats(id: String)
GET /api/v2/campaigns/:id/referrals         controllers.CampaignApi.getCampaignReferrals(id: String)


#Management Api

GET    /management/api/analytics                        controllers.ManagementApi.getAnalyticsCacheSummary()
POST   /management/api/analytics/:dataType/:key         controllers.ManagementApi.refreshAnalyticsCacheEntry(dataType: String, key: String)
DELETE /management/api/analytics/:dataType/:key         controllers.ManagementApi.deleteAnalyticsCacheEntry(dataType: String, key: String)
POST   /management/api/analytics/:dataType              controllers.ManagementApi.refreshAnalyticsCacheForType(dataType: String)
POST   /management/api/refreshExpiringCampaigns         controllers.ManagementApi.refreshExpiringCampaigns

GET /assets/*file                 controllers.Assets.versioned(path="/public", file: Asset)


# Management
GET /management/healthcheck       controllers.Management.healthCheck
