---
AWSTemplateFormatVersion: '2010-09-09'
Description: campaign-central
Parameters:
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instance
    Type: String
    Default: composer-team

  Stage:
    Description: Environment name
    Type: String
    AllowedValues:
    - PROD
    Default: PROD

  VpcId:
    Description: ID of the VPC onto which to launch the application eg. vpc-1234abcd
    Type: AWS::EC2::VPC::Id
    Default: vpc-381fa95d

  PublicVpcSubnets:
    Description: Subnets to use in VPC for public internet-facing ELB eg. subnet-abcd1234
    Type: List<AWS::EC2::Subnet::Id>
    Default: subnet-c3620fa6,subnet-2b37bd5c

  PrivateVpcSubnets:
    Description: Subnets to use in VPC for private EC2 instances eg. subnet-abcd1234
    Type: List<AWS::EC2::Subnet::Id>
    Default: subnet-c2620fa7,subnet-2a37bd5d

  AMI:
    Description: AMIgo AMI id
    Type: AWS::EC2::Image::Id

  GuardianIP:
    Description: Ip range for the office
    Type: String
    Default: 77.91.248.0/21

  LogsKinesisStreamName:
    Description: The kinesis stream to send logs to
    Type: String
    Default: elk-PROD-KinesisStream-1PYU4KS1UEQA

  OphanAccountNumber:
    Description: 'Account number for the Ophan team to permit them to write to our dynamodb tables.'
    Type: String

Mappings:
  Config:
    CODE:
      MinSize: 1
      MaxSize: 2
      InstanceType: t2.micro
    PROD:
      MinSize: 2
      MaxSize: 4
      InstanceType: t2.micro

Resources:
  CampaignCentralRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"

  OphanExcavatorCrossAccountRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            AWS: !Sub arn:aws:iam::${OphanAccountNumber}:root

  CampaignCentralDescribeEC2Policy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CampaignCentralDescribeEC2Policy
      PolicyDocument:
        Statement:
        - Action:
          - EC2:Describe*
          Effect: Allow
          Resource: "*"
      Roles:
      - Ref: CampaignCentralRole

  CampaignCentralGetDistributablesPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CampaignCentralGetDistributablesPolicy
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - s3:GetObject
          Resource:
          - arn:aws:s3:::composer-dist/*
      Roles:
      - Ref: CampaignCentralRole

  CampaignCentralGetConfigPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CampaignCentralGetConfigPolicy
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - s3:GetObject
          Resource:
          - arn:aws:s3:::guconf-flexible/campaign-central/*
      Roles:
      - Ref: CampaignCentralRole

  CampaignCentralPanDomainPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CampaignCentralPanDomainPolicy
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - s3:GetObject
          Resource:
          - arn:aws:s3:::pan-domain-auth-settings/*
      Roles:
      - Ref: CampaignCentralRole

  CampaignCentralGetTeamKeysPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CampaignCentralGetTeamKeysPolicy
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - s3:GetObject
          Resource:
          - arn:aws:s3:::github-public-keys/*
        - Effect: Allow
          Action:
          - s3:ListBucket
          Resource: arn:aws:s3:::github-public-keys
      Roles:
      - Ref: CampaignCentralRole

  CampaignCentralCloudwatchPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CampaignCentralCloudwatchPolicy
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - cloudwatch:*
          Resource: "*"
      Roles:
      - Ref: CampaignCentralRole

  CampaignCentralDynamoPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CampaignCentralDynamoPolicy
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:*
          Resource: "*"
      Roles:
      - Ref: CampaignCentralRole

  OphanExcavatorDynamoPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: OphanExcavatorDynamoPolicy
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:BatchWriteItem
          - dynamodb:Scan
          - dynamodb:query
          Resource:
          - !Sub arn:aws:dynamodb:*:${AWS::AccountId}:table/campaign-central-${Stage}-campaign-page-views
          - !Sub arn:aws:dynamodb:*:${AWS::AccountId}:table/campaign-central-${Stage}-campaign-uniques
          - !Sub arn:aws:dynamodb:*:${AWS::AccountId}:table/campaign-central-${Stage}-campaigns
          - !Sub arn:aws:dynamodb:*:${AWS::AccountId}:table/campaign-central-${Stage}-referrals
          - !Sub arn:aws:dynamodb:*:${AWS::AccountId}:table/campaign-central-${Stage}-social-referrals
          - !Sub arn:aws:dynamodb:*:${AWS::AccountId}:table/campaign-central-${Stage}-analytics-latest
          - !Sub arn:aws:dynamodb:*:${AWS::AccountId}:table/campaign-central-${Stage}-location-analytics-latest
          - !Sub arn:aws:dynamodb:*:${AWS::AccountId}:table/campaign-central-${Stage}-media
      Roles:
      - Ref: OphanExcavatorCrossAccountRole

  CampaignCentralKinesisPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CampaignCentralKinesisPolicy
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - kinesis:*
          Resource:
            Fn::Join:
            - ''
            - - arn:aws:kinesis:eu-west-1:743583969668:stream/
              - Ref: LogsKinesisStreamName
      Roles:
      - Ref: CampaignCentralRole

  CampaignCentralInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - Ref: CampaignCentralRole

  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH access from the office
      VpcId:
        Ref: VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 10.0.0.0/8

  AppServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: campaign central Application servers
      VpcId:
        Ref: VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 9000
        ToPort: 9000
        CidrIp:
          Ref: GuardianIP
      - IpProtocol: tcp
        FromPort: 9000
        ToPort: 9000
        SourceSecurityGroupId:
          Ref: LoadBalancerSecurityGroup

  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: campaign central application load balancer
      VpcId:
        Ref: VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        CidrIp: 0.0.0.0/0

  CampaignCentralLoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      SecurityGroups:
      - Fn::GetAtt:
        - LoadBalancerSecurityGroup
        - GroupId
      CrossZone: true
      Subnets:
        Ref: PublicVpcSubnets
      Listeners:
      - LoadBalancerPort: '80'
        InstancePort: '9000'
        Protocol: HTTP
      - LoadBalancerPort: '443'
        InstancePort: '9000'
        Protocol: HTTPS
        SSLCertificateId:
          Fn::ImportValue:
            Fn::Sub: certificate:gutools:campaign-central:${Stage}
      HealthCheck:
        Target: HTTP:9000/management/healthcheck
        HealthyThreshold: '2'
        UnhealthyThreshold: '2'
        Interval: '10'
        Timeout: '5'
      Tags:
      - Key: Stage
        Value:
          Ref: Stage
      - Key: Stack
        Value: flexible
      - Key: App
        Value: campaign-central

  AutoscalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones:
        - Fn::Select:
          - 0
          - Fn::GetAZs: !Ref "AWS::Region"
        - Fn::Select:
          - 1
          - Fn::GetAZs: !Ref "AWS::Region"
      VPCZoneIdentifier:
        Ref: PrivateVpcSubnets
      LaunchConfigurationName:
        Ref: CampaignCentralLaunchConfig
      MinSize:
        Fn::FindInMap:
        - Config
        - Ref: Stage
        - MinSize
      MaxSize:
        Fn::FindInMap:
        - Config
        - Ref: Stage
        - MaxSize
      HealthCheckType: ELB
      HealthCheckGracePeriod: 300
      LoadBalancerNames:
      - Ref: CampaignCentralLoadBalancer
      Tags:
      - Key: Stage
        Value:
          Ref: Stage
        PropagateAtLaunch: 'true'
      - Key: Stack
        Value: flexible
        PropagateAtLaunch: 'true'
      - Key: App
        Value: campaign-central
        PropagateAtLaunch: 'true'

  CampaignCentralLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      KeyName:
        Ref: KeyName
      ImageId:
        Ref: AMI
      SecurityGroups:
      - Ref: AppServerSecurityGroup
      - Ref: SSHSecurityGroup
      InstanceType:
        Fn::FindInMap:
        - Config
        - Ref: Stage
        - InstanceType
      IamInstanceProfile:
        Ref: CampaignCentralInstanceProfile
      UserData:
        Fn::Base64:
          Fn::Sub: |
            #!/bin/bash -ev
            aws s3 cp s3://composer-dist/flexible/${Stage}/campaign-central/campaign-central_1.0_all.deb /tmp/campaign-central.deb
            dpkg -i /tmp/campaign-central.deb
